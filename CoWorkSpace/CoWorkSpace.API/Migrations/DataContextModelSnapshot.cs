// <auto-generated />
using System;
using CoWorkSpace.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoWorkSpace.API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CoWorkSpace.Shared.Entidades.Asignacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EspacioId")
                        .HasColumnType("int");

                    b.Property<int>("RecursoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EspacioId");

                    b.HasIndex("RecursoId");

                    b.ToTable("Asignacions");
                });

            modelBuilder.Entity("CoWorkSpace.Shared.Entidades.Espacio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CantidadMax")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Espacios");
                });

            modelBuilder.Entity("CoWorkSpace.Shared.Entidades.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CantidadMax")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("CoWorkSpace.Shared.Entidades.Inscripcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventoId")
                        .HasColumnType("int");

                    b.Property<int>("MiembroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.HasIndex("MiembroId");

                    b.ToTable("Inscripcions");
                });

            modelBuilder.Entity("CoWorkSpace.Shared.Entidades.Membresia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Membresias");
                });

            modelBuilder.Entity("CoWorkSpace.Shared.Entidades.Miembro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TelefonoMovil")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Miembros");
                });

            modelBuilder.Entity("CoWorkSpace.Shared.Entidades.Recurso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Recursos");
                });

            modelBuilder.Entity("CoWorkSpace.Shared.Entidades.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EspacioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaReserva")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("HoraFinal")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time");

                    b.Property<int>("MiembroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EspacioId");

                    b.HasIndex("MiembroId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("CoWorkSpace.Shared.Entidades.Asignacion", b =>
                {
                    b.HasOne("CoWorkSpace.Shared.Entidades.Espacio", "Espacio")
                        .WithMany("Asignacions")
                        .HasForeignKey("EspacioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoWorkSpace.Shared.Entidades.Recurso", "Recursos")
                        .WithMany("Asignacions")
                        .HasForeignKey("RecursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Espacio");

                    b.Navigation("Recursos");
                });

            modelBuilder.Entity("CoWorkSpace.Shared.Entidades.Inscripcion", b =>
                {
                    b.HasOne("CoWorkSpace.Shared.Entidades.Evento", "Eventos")
                        .WithMany("Inscripcions")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoWorkSpace.Shared.Entidades.Miembro", "Miembros")
                        .WithMany("Inscripcions")
                        .HasForeignKey("MiembroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eventos");

                    b.Navigation("Miembros");
                });

            modelBuilder.Entity("CoWorkSpace.Shared.Entidades.Reserva", b =>
                {
                    b.HasOne("CoWorkSpace.Shared.Entidades.Espacio", "Espacios")
                        .WithMany("Reservas")
                        .HasForeignKey("EspacioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoWorkSpace.Shared.Entidades.Miembro", "Miembros")
                        .WithMany("Reservas")
                        .HasForeignKey("MiembroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Espacios");

                    b.Navigation("Miembros");
                });

            modelBuilder.Entity("CoWorkSpace.Shared.Entidades.Espacio", b =>
                {
                    b.Navigation("Asignacions");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("CoWorkSpace.Shared.Entidades.Evento", b =>
                {
                    b.Navigation("Inscripcions");
                });

            modelBuilder.Entity("CoWorkSpace.Shared.Entidades.Miembro", b =>
                {
                    b.Navigation("Inscripcions");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("CoWorkSpace.Shared.Entidades.Recurso", b =>
                {
                    b.Navigation("Asignacions");
                });
#pragma warning restore 612, 618
        }
    }
}
